// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class AuctionCreated extends ethereum.Event {
  get params(): AuctionCreated__Params {
    return new AuctionCreated__Params(this);
  }
}

export class AuctionCreated__Params {
  _event: AuctionCreated;

  constructor(event: AuctionCreated) {
    this._event = event;
  }

  get _auctionId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _startingPrice(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _endingPrice(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get _duration(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class AuctionSuccessful extends ethereum.Event {
  get params(): AuctionSuccessful__Params {
    return new AuctionSuccessful__Params(this);
  }
}

export class AuctionSuccessful__Params {
  _event: AuctionSuccessful;

  constructor(event: AuctionSuccessful) {
    this._event = event;
  }

  get _auctionId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _seller(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get _winner(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get _finalPrice(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class AddAuctionWhiteList extends ethereum.Event {
  get params(): AddAuctionWhiteList__Params {
    return new AddAuctionWhiteList__Params(this);
  }
}

export class AddAuctionWhiteList__Params {
  _event: AddAuctionWhiteList;

  constructor(event: AddAuctionWhiteList) {
    this._event = event;
  }

  get _auctionId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _candidate(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RemoveAuctionWhiteList extends ethereum.Event {
  get params(): RemoveAuctionWhiteList__Params {
    return new RemoveAuctionWhiteList__Params(this);
  }
}

export class RemoveAuctionWhiteList__Params {
  _event: RemoveAuctionWhiteList;

  constructor(event: RemoveAuctionWhiteList) {
    this._event = event;
  }

  get _auctionId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _candidate(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class Transfer extends ethereum.Event {
  get params(): Transfer__Params {
    return new Transfer__Params(this);
  }
}

export class Transfer__Params {
  _event: Transfer;

  constructor(event: Transfer) {
    this._event = event;
  }

  get _from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Approval extends ethereum.Event {
  get params(): Approval__Params {
    return new Approval__Params(this);
  }
}

export class Approval__Params {
  _event: Approval;

  constructor(event: Approval) {
    this._event = event;
  }

  get _owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _approved(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ApprovalForAll extends ethereum.Event {
  get params(): ApprovalForAll__Params {
    return new ApprovalForAll__Params(this);
  }
}

export class ApprovalForAll__Params {
  _event: ApprovalForAll;

  constructor(event: ApprovalForAll) {
    this._event = event;
  }

  get _owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _operator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _approved(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class NewUpgradeApply extends ethereum.Event {
  get params(): NewUpgradeApply__Params {
    return new NewUpgradeApply__Params(this);
  }
}

export class NewUpgradeApply__Params {
  _event: NewUpgradeApply;

  constructor(event: NewUpgradeApply) {
    this._event = event;
  }

  get _tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _applier(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _level(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get _applyTime(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get _applyBlockno(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class CancelUpgrade extends ethereum.Event {
  get params(): CancelUpgrade__Params {
    return new CancelUpgrade__Params(this);
  }
}

export class CancelUpgrade__Params {
  _event: CancelUpgrade;

  constructor(event: CancelUpgrade) {
    this._event = event;
  }

  get _tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class LevelChanged extends ethereum.Event {
  get params(): LevelChanged__Params {
    return new LevelChanged__Params(this);
  }
}

export class LevelChanged__Params {
  _event: LevelChanged;

  constructor(event: LevelChanged) {
    this._event = event;
  }

  get _tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _fromLevel(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get _toLevel(): i32 {
    return this._event.parameters[3].value.toI32();
  }
}

export class AuctionCancelled extends ethereum.Event {
  get params(): AuctionCancelled__Params {
    return new AuctionCancelled__Params(this);
  }
}

export class AuctionCancelled__Params {
  _event: AuctionCancelled;

  constructor(event: AuctionCancelled) {
    this._event = event;
  }

  get _auctionId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ProtocolUpgrade extends ethereum.Event {
  get params(): ProtocolUpgrade__Params {
    return new ProtocolUpgrade__Params(this);
  }
}

export class ProtocolUpgrade__Params {
  _event: ProtocolUpgrade;

  constructor(event: ProtocolUpgrade) {
    this._event = event;
  }

  get _saleAuction(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class OperatorUpdated extends ethereum.Event {
  get params(): OperatorUpdated__Params {
    return new OperatorUpdated__Params(this);
  }
}

export class OperatorUpdated__Params {
  _event: OperatorUpdated;

  constructor(event: OperatorUpdated) {
    this._event = event;
  }

  get _op(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _enabled(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class BlackListUpdated extends ethereum.Event {
  get params(): BlackListUpdated__Params {
    return new BlackListUpdated__Params(this);
  }
}

export class BlackListUpdated__Params {
  _event: BlackListUpdated;

  constructor(event: BlackListUpdated) {
    this._event = event;
  }

  get _person(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _op(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class Pause extends ethereum.Event {
  get params(): Pause__Params {
    return new Pause__Params(this);
  }
}

export class Pause__Params {
  _event: Pause;

  constructor(event: Pause) {
    this._event = event;
  }
}

export class Unpause extends ethereum.Event {
  get params(): Unpause__Params {
    return new Unpause__Params(this);
  }
}

export class Unpause__Params {
  _event: Unpause;

  constructor(event: Unpause) {
    this._event = event;
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ThorNode__getTokenParamsResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt, value3: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    return map;
  }

  getValue0(): BigInt {
    return this.value0;
  }

  getValue1(): BigInt {
    return this.value1;
  }

  getValue2(): BigInt {
    return this.value2;
  }

  getValue3(): BigInt {
    return this.value3;
  }
}

export class ThorNode__getMetadataResult {
  value0: Address;
  value1: i32;
  value2: boolean;
  value3: boolean;
  value4: BigInt;
  value5: BigInt;
  value6: BigInt;

  constructor(
    value0: Address,
    value1: i32,
    value2: boolean,
    value3: boolean,
    value4: BigInt,
    value5: BigInt,
    value6: BigInt,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set(
      "value1",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value1)),
    );
    map.set("value2", ethereum.Value.fromBoolean(this.value2));
    map.set("value3", ethereum.Value.fromBoolean(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    return map;
  }

  getValue0(): Address {
    return this.value0;
  }

  getValue1(): i32 {
    return this.value1;
  }

  getValue2(): boolean {
    return this.value2;
  }

  getValue3(): boolean {
    return this.value3;
  }

  getValue4(): BigInt {
    return this.value4;
  }

  getValue5(): BigInt {
    return this.value5;
  }

  getValue6(): BigInt {
    return this.value6;
  }
}

export class ThorNode extends ethereum.SmartContract {
  static bind(address: Address): ThorNode {
    return new ThorNode("ThorNode", address);
  }

  supportsInterface(_interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(_interfaceId)],
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(_interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(_interfaceId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  isNormalToken(_target: Address): boolean {
    let result = super.call("isNormalToken", "isNormalToken(address):(bool)", [
      ethereum.Value.fromAddress(_target),
    ]);

    return result[0].toBoolean();
  }

  try_isNormalToken(_target: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isNormalToken",
      "isNormalToken(address):(bool)",
      [ethereum.Value.fromAddress(_target)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getApproved(_tokenId: BigInt): Address {
    let result = super.call("getApproved", "getApproved(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId),
    ]);

    return result[0].toAddress();
  }

  try_getApproved(_tokenId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getApproved",
      "getApproved(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  operators(param0: Address): boolean {
    let result = super.call("operators", "operators(address):(bool)", [
      ethereum.Value.fromAddress(param0),
    ]);

    return result[0].toBoolean();
  }

  try_operators(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("operators", "operators(address):(bool)", [
      ethereum.Value.fromAddress(param0),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  totalSupply(): BigInt {
    let result = super.call("totalSupply", "totalSupply():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalSupply(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalSupply", "totalSupply():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  isToken(_target: Address): boolean {
    let result = super.call("isToken", "isToken(address):(bool)", [
      ethereum.Value.fromAddress(_target),
    ]);

    return result[0].toBoolean();
  }

  try_isToken(_target: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("isToken", "isToken(address):(bool)", [
      ethereum.Value.fromAddress(_target),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  InterfaceId_ERC165(): Bytes {
    let result = super.call(
      "InterfaceId_ERC165",
      "InterfaceId_ERC165():(bytes4)",
      [],
    );

    return result[0].toBytes();
  }

  try_InterfaceId_ERC165(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "InterfaceId_ERC165",
      "InterfaceId_ERC165():(bytes4)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getTokenParams(_level: i32): ThorNode__getTokenParamsResult {
    let result = super.call(
      "getTokenParams",
      "getTokenParams(uint8):(uint256,uint64,uint64,uint64)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_level))],
    );

    return new ThorNode__getTokenParamsResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
    );
  }

  try_getTokenParams(
    _level: i32,
  ): ethereum.CallResult<ThorNode__getTokenParamsResult> {
    let result = super.tryCall(
      "getTokenParams",
      "getTokenParams(uint8):(uint256,uint64,uint64,uint64)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_level))],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new ThorNode__getTokenParamsResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
      ),
    );
  }

  auctionCount(): BigInt {
    let result = super.call("auctionCount", "auctionCount():(uint256)", []);

    return result[0].toBigInt();
  }

  try_auctionCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("auctionCount", "auctionCount():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  unpause(): boolean {
    let result = super.call("unpause", "unpause():(bool)", []);

    return result[0].toBoolean();
  }

  try_unpause(): ethereum.CallResult<boolean> {
    let result = super.tryCall("unpause", "unpause():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  blackList(param0: Address): boolean {
    let result = super.call("blackList", "blackList(address):(bool)", [
      ethereum.Value.fromAddress(param0),
    ]);

    return result[0].toBoolean();
  }

  try_blackList(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("blackList", "blackList(address):(bool)", [
      ethereum.Value.fromAddress(param0),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  canTransfer(_tokenId: BigInt): boolean {
    let result = super.call("canTransfer", "canTransfer(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId),
    ]);

    return result[0].toBoolean();
  }

  try_canTransfer(_tokenId: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("canTransfer", "canTransfer(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  ownerOf(_tokenId: BigInt): Address {
    let result = super.call("ownerOf", "ownerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId),
    ]);

    return result[0].toAddress();
  }

  try_ownerOf(_tokenId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("ownerOf", "ownerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  transferCooldown(): BigInt {
    let result = super.call(
      "transferCooldown",
      "transferCooldown():(uint64)",
      [],
    );

    return result[0].toBigInt();
  }

  try_transferCooldown(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "transferCooldown",
      "transferCooldown():(uint64)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  balanceOf(_owner: Address): BigInt {
    let result = super.call("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(_owner),
    ]);

    return result[0].toBigInt();
  }

  try_balanceOf(_owner: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(_owner),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  pause(): boolean {
    let result = super.call("pause", "pause():(bool)", []);

    return result[0].toBoolean();
  }

  try_pause(): ethereum.CallResult<boolean> {
    let result = super.tryCall("pause", "pause():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  leadTime(): BigInt {
    let result = super.call("leadTime", "leadTime():(uint64)", []);

    return result[0].toBigInt();
  }

  try_leadTime(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("leadTime", "leadTime():(uint64)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  symbol(): string {
    let result = super.call("symbol", "symbol():(string)", []);

    return result[0].toString();
  }

  try_symbol(): ethereum.CallResult<string> {
    let result = super.tryCall("symbol", "symbol():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getMetadata(_tokenId: BigInt): ThorNode__getMetadataResult {
    let result = super.call(
      "getMetadata",
      "getMetadata(uint256):(address,uint8,bool,bool,uint64,uint64,uint64)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)],
    );

    return new ThorNode__getMetadataResult(
      result[0].toAddress(),
      result[1].toI32(),
      result[2].toBoolean(),
      result[3].toBoolean(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toBigInt(),
    );
  }

  try_getMetadata(
    _tokenId: BigInt,
  ): ethereum.CallResult<ThorNode__getMetadataResult> {
    let result = super.tryCall(
      "getMetadata",
      "getMetadata(uint256):(address,uint8,bool,bool,uint64,uint64,uint64)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new ThorNode__getMetadataResult(
        value[0].toAddress(),
        value[1].toI32(),
        value[2].toBoolean(),
        value[3].toBoolean(),
        value[4].toBigInt(),
        value[5].toBigInt(),
        value[6].toBigInt(),
      ),
    );
  }

  idToOwner(param0: BigInt): Address {
    let result = super.call("idToOwner", "idToOwner(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0),
    ]);

    return result[0].toAddress();
  }

  try_idToOwner(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("idToOwner", "idToOwner(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  tokenURI(_tokenId: BigInt): string {
    let result = super.call("tokenURI", "tokenURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId),
    ]);

    return result[0].toString();
  }

  try_tokenURI(_tokenId: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall("tokenURI", "tokenURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  xTokenCount(): BigInt {
    let result = super.call("xTokenCount", "xTokenCount():(uint64)", []);

    return result[0].toBigInt();
  }

  try_xTokenCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("xTokenCount", "xTokenCount():(uint64)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  saleAuction(): Address {
    let result = super.call("saleAuction", "saleAuction():(address)", []);

    return result[0].toAddress();
  }

  try_saleAuction(): ethereum.CallResult<Address> {
    let result = super.tryCall("saleAuction", "saleAuction():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  ownerToId(param0: Address): BigInt {
    let result = super.call("ownerToId", "ownerToId(address):(uint256)", [
      ethereum.Value.fromAddress(param0),
    ]);

    return result[0].toBigInt();
  }

  try_ownerToId(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("ownerToId", "ownerToId(address):(uint256)", [
      ethereum.Value.fromAddress(param0),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  normalTokenCount(): BigInt {
    let result = super.call(
      "normalTokenCount",
      "normalTokenCount():(uint64)",
      [],
    );

    return result[0].toBigInt();
  }

  try_normalTokenCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "normalTokenCount",
      "normalTokenCount():(uint64)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  isX(_target: Address): boolean {
    let result = super.call("isX", "isX(address):(bool)", [
      ethereum.Value.fromAddress(_target),
    ]);

    return result[0].toBoolean();
  }

  try_isX(_target: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("isX", "isX(address):(bool)", [
      ethereum.Value.fromAddress(_target),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class RemoveAuctionWhiteListCall extends ethereum.Call {
  get inputs(): RemoveAuctionWhiteListCall__Inputs {
    return new RemoveAuctionWhiteListCall__Inputs(this);
  }

  get outputs(): RemoveAuctionWhiteListCall__Outputs {
    return new RemoveAuctionWhiteListCall__Outputs(this);
  }
}

export class RemoveAuctionWhiteListCall__Inputs {
  _call: RemoveAuctionWhiteListCall;

  constructor(call: RemoveAuctionWhiteListCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _address(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RemoveAuctionWhiteListCall__Outputs {
  _call: RemoveAuctionWhiteListCall;

  constructor(call: RemoveAuctionWhiteListCall) {
    this._call = call;
  }
}

export class SendBonusToCall extends ethereum.Call {
  get inputs(): SendBonusToCall__Inputs {
    return new SendBonusToCall__Inputs(this);
  }

  get outputs(): SendBonusToCall__Outputs {
    return new SendBonusToCall__Outputs(this);
  }
}

export class SendBonusToCall__Inputs {
  _call: SendBonusToCall;

  constructor(call: SendBonusToCall) {
    this._call = call;
  }

  get _to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SendBonusToCall__Outputs {
  _call: SendBonusToCall;

  constructor(call: SendBonusToCall) {
    this._call = call;
  }
}

export class ApproveCall extends ethereum.Call {
  get inputs(): ApproveCall__Inputs {
    return new ApproveCall__Inputs(this);
  }

  get outputs(): ApproveCall__Outputs {
    return new ApproveCall__Outputs(this);
  }
}

export class ApproveCall__Inputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get _to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ApproveCall__Outputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }
}

export class SetTokenMetadataBaseURICall extends ethereum.Call {
  get inputs(): SetTokenMetadataBaseURICall__Inputs {
    return new SetTokenMetadataBaseURICall__Inputs(this);
  }

  get outputs(): SetTokenMetadataBaseURICall__Outputs {
    return new SetTokenMetadataBaseURICall__Outputs(this);
  }
}

export class SetTokenMetadataBaseURICall__Inputs {
  _call: SetTokenMetadataBaseURICall;

  constructor(call: SetTokenMetadataBaseURICall) {
    this._call = call;
  }

  get _newBaseURI(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class SetTokenMetadataBaseURICall__Outputs {
  _call: SetTokenMetadataBaseURICall;

  constructor(call: SetTokenMetadataBaseURICall) {
    this._call = call;
  }
}

export class TransferFromCall extends ethereum.Call {
  get inputs(): TransferFromCall__Inputs {
    return new TransferFromCall__Inputs(this);
  }

  get outputs(): TransferFromCall__Outputs {
    return new TransferFromCall__Outputs(this);
  }
}

export class TransferFromCall__Inputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get _from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class TransferFromCall__Outputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }
}

export class SetLeadTimeCall extends ethereum.Call {
  get inputs(): SetLeadTimeCall__Inputs {
    return new SetLeadTimeCall__Inputs(this);
  }

  get outputs(): SetLeadTimeCall__Outputs {
    return new SetLeadTimeCall__Outputs(this);
  }
}

export class SetLeadTimeCall__Inputs {
  _call: SetLeadTimeCall;

  constructor(call: SetLeadTimeCall) {
    this._call = call;
  }

  get _leadtime(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetLeadTimeCall__Outputs {
  _call: SetLeadTimeCall;

  constructor(call: SetLeadTimeCall) {
    this._call = call;
  }
}

export class CreateDirectionalSaleAuctionCall extends ethereum.Call {
  get inputs(): CreateDirectionalSaleAuctionCall__Inputs {
    return new CreateDirectionalSaleAuctionCall__Inputs(this);
  }

  get outputs(): CreateDirectionalSaleAuctionCall__Outputs {
    return new CreateDirectionalSaleAuctionCall__Outputs(this);
  }
}

export class CreateDirectionalSaleAuctionCall__Inputs {
  _call: CreateDirectionalSaleAuctionCall;

  constructor(call: CreateDirectionalSaleAuctionCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _price(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _duration(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _toAddress(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class CreateDirectionalSaleAuctionCall__Outputs {
  _call: CreateDirectionalSaleAuctionCall;

  constructor(call: CreateDirectionalSaleAuctionCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class AddToBlackListCall extends ethereum.Call {
  get inputs(): AddToBlackListCall__Inputs {
    return new AddToBlackListCall__Inputs(this);
  }

  get outputs(): AddToBlackListCall__Outputs {
    return new AddToBlackListCall__Outputs(this);
  }
}

export class AddToBlackListCall__Inputs {
  _call: AddToBlackListCall;

  constructor(call: AddToBlackListCall) {
    this._call = call;
  }

  get _badGuy(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddToBlackListCall__Outputs {
  _call: AddToBlackListCall;

  constructor(call: AddToBlackListCall) {
    this._call = call;
  }
}

export class BidCall extends ethereum.Call {
  get inputs(): BidCall__Inputs {
    return new BidCall__Inputs(this);
  }

  get outputs(): BidCall__Outputs {
    return new BidCall__Outputs(this);
  }
}

export class BidCall__Inputs {
  _call: BidCall;

  constructor(call: BidCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class BidCall__Outputs {
  _call: BidCall;

  constructor(call: BidCall) {
    this._call = call;
  }
}

export class RemoveFromBlackListCall extends ethereum.Call {
  get inputs(): RemoveFromBlackListCall__Inputs {
    return new RemoveFromBlackListCall__Inputs(this);
  }

  get outputs(): RemoveFromBlackListCall__Outputs {
    return new RemoveFromBlackListCall__Outputs(this);
  }
}

export class RemoveFromBlackListCall__Inputs {
  _call: RemoveFromBlackListCall;

  constructor(call: RemoveFromBlackListCall) {
    this._call = call;
  }

  get _innocent(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveFromBlackListCall__Outputs {
  _call: RemoveFromBlackListCall;

  constructor(call: RemoveFromBlackListCall) {
    this._call = call;
  }
}

export class UpgradeToCall extends ethereum.Call {
  get inputs(): UpgradeToCall__Inputs {
    return new UpgradeToCall__Inputs(this);
  }

  get outputs(): UpgradeToCall__Outputs {
    return new UpgradeToCall__Outputs(this);
  }
}

export class UpgradeToCall__Inputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _toLvl(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class UpgradeToCall__Outputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }
}

export class SetSaleAuctionAddressCall extends ethereum.Call {
  get inputs(): SetSaleAuctionAddressCall__Inputs {
    return new SetSaleAuctionAddressCall__Inputs(this);
  }

  get outputs(): SetSaleAuctionAddressCall__Outputs {
    return new SetSaleAuctionAddressCall__Outputs(this);
  }
}

export class SetSaleAuctionAddressCall__Inputs {
  _call: SetSaleAuctionAddressCall;

  constructor(call: SetSaleAuctionAddressCall) {
    this._call = call;
  }

  get _address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetSaleAuctionAddressCall__Outputs {
  _call: SetSaleAuctionAddressCall;

  constructor(call: SetSaleAuctionAddressCall) {
    this._call = call;
  }
}

export class ApplyUpgradeCall extends ethereum.Call {
  get inputs(): ApplyUpgradeCall__Inputs {
    return new ApplyUpgradeCall__Inputs(this);
  }

  get outputs(): ApplyUpgradeCall__Outputs {
    return new ApplyUpgradeCall__Outputs(this);
  }
}

export class ApplyUpgradeCall__Inputs {
  _call: ApplyUpgradeCall;

  constructor(call: ApplyUpgradeCall) {
    this._call = call;
  }

  get _toLvl(): i32 {
    return this._call.inputValues[0].value.toI32();
  }
}

export class ApplyUpgradeCall__Outputs {
  _call: ApplyUpgradeCall;

  constructor(call: ApplyUpgradeCall) {
    this._call = call;
  }
}

export class AddTokenCall extends ethereum.Call {
  get inputs(): AddTokenCall__Inputs {
    return new AddTokenCall__Inputs(this);
  }

  get outputs(): AddTokenCall__Outputs {
    return new AddTokenCall__Outputs(this);
  }
}

export class AddTokenCall__Inputs {
  _call: AddTokenCall;

  constructor(call: AddTokenCall) {
    this._call = call;
  }

  get _addr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _lvl(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get _onUpgrade(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }

  get _applyUpgradeTime(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _applyUpgradeBlockno(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class AddTokenCall__Outputs {
  _call: AddTokenCall;

  constructor(call: AddTokenCall) {
    this._call = call;
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class CancelAuctionCall extends ethereum.Call {
  get inputs(): CancelAuctionCall__Inputs {
    return new CancelAuctionCall__Inputs(this);
  }

  get outputs(): CancelAuctionCall__Outputs {
    return new CancelAuctionCall__Outputs(this);
  }
}

export class CancelAuctionCall__Inputs {
  _call: CancelAuctionCall;

  constructor(call: CancelAuctionCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelAuctionCall__Outputs {
  _call: CancelAuctionCall;

  constructor(call: CancelAuctionCall) {
    this._call = call;
  }
}

export class AddOperatorCall extends ethereum.Call {
  get inputs(): AddOperatorCall__Inputs {
    return new AddOperatorCall__Inputs(this);
  }

  get outputs(): AddOperatorCall__Outputs {
    return new AddOperatorCall__Outputs(this);
  }
}

export class AddOperatorCall__Inputs {
  _call: AddOperatorCall;

  constructor(call: AddOperatorCall) {
    this._call = call;
  }

  get _operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddOperatorCall__Outputs {
  _call: AddOperatorCall;

  constructor(call: AddOperatorCall) {
    this._call = call;
  }
}

export class TransferCall extends ethereum.Call {
  get inputs(): TransferCall__Inputs {
    return new TransferCall__Inputs(this);
  }

  get outputs(): TransferCall__Outputs {
    return new TransferCall__Outputs(this);
  }
}

export class TransferCall__Inputs {
  _call: TransferCall;

  constructor(call: TransferCall) {
    this._call = call;
  }

  get _to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class TransferCall__Outputs {
  _call: TransferCall;

  constructor(call: TransferCall) {
    this._call = call;
  }
}

export class RemoveOperatorCall extends ethereum.Call {
  get inputs(): RemoveOperatorCall__Inputs {
    return new RemoveOperatorCall__Inputs(this);
  }

  get outputs(): RemoveOperatorCall__Outputs {
    return new RemoveOperatorCall__Outputs(this);
  }
}

export class RemoveOperatorCall__Inputs {
  _call: RemoveOperatorCall;

  constructor(call: RemoveOperatorCall) {
    this._call = call;
  }

  get _operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveOperatorCall__Outputs {
  _call: RemoveOperatorCall;

  constructor(call: RemoveOperatorCall) {
    this._call = call;
  }
}

export class DowngradeToCall extends ethereum.Call {
  get inputs(): DowngradeToCall__Inputs {
    return new DowngradeToCall__Inputs(this);
  }

  get outputs(): DowngradeToCall__Outputs {
    return new DowngradeToCall__Outputs(this);
  }
}

export class DowngradeToCall__Inputs {
  _call: DowngradeToCall;

  constructor(call: DowngradeToCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _toLvl(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class DowngradeToCall__Outputs {
  _call: DowngradeToCall;

  constructor(call: DowngradeToCall) {
    this._call = call;
  }
}

export class CancelUpgradeCall extends ethereum.Call {
  get inputs(): CancelUpgradeCall__Inputs {
    return new CancelUpgradeCall__Inputs(this);
  }

  get outputs(): CancelUpgradeCall__Outputs {
    return new CancelUpgradeCall__Outputs(this);
  }
}

export class CancelUpgradeCall__Inputs {
  _call: CancelUpgradeCall;

  constructor(call: CancelUpgradeCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelUpgradeCall__Outputs {
  _call: CancelUpgradeCall;

  constructor(call: CancelUpgradeCall) {
    this._call = call;
  }
}

export class SetTransferCooldownCall extends ethereum.Call {
  get inputs(): SetTransferCooldownCall__Inputs {
    return new SetTransferCooldownCall__Inputs(this);
  }

  get outputs(): SetTransferCooldownCall__Outputs {
    return new SetTransferCooldownCall__Outputs(this);
  }
}

export class SetTransferCooldownCall__Inputs {
  _call: SetTransferCooldownCall;

  constructor(call: SetTransferCooldownCall) {
    this._call = call;
  }

  get _cooldown(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetTransferCooldownCall__Outputs {
  _call: SetTransferCooldownCall;

  constructor(call: SetTransferCooldownCall) {
    this._call = call;
  }
}

export class CreateSaleAuctionCall extends ethereum.Call {
  get inputs(): CreateSaleAuctionCall__Inputs {
    return new CreateSaleAuctionCall__Inputs(this);
  }

  get outputs(): CreateSaleAuctionCall__Outputs {
    return new CreateSaleAuctionCall__Outputs(this);
  }
}

export class CreateSaleAuctionCall__Inputs {
  _call: CreateSaleAuctionCall;

  constructor(call: CreateSaleAuctionCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _startingPrice(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _endingPrice(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _duration(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class CreateSaleAuctionCall__Outputs {
  _call: CreateSaleAuctionCall;

  constructor(call: CreateSaleAuctionCall) {
    this._call = call;
  }
}

export class AddAuctionWhiteListCall extends ethereum.Call {
  get inputs(): AddAuctionWhiteListCall__Inputs {
    return new AddAuctionWhiteListCall__Inputs(this);
  }

  get outputs(): AddAuctionWhiteListCall__Outputs {
    return new AddAuctionWhiteListCall__Outputs(this);
  }
}

export class AddAuctionWhiteListCall__Inputs {
  _call: AddAuctionWhiteListCall;

  constructor(call: AddAuctionWhiteListCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _address(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class AddAuctionWhiteListCall__Outputs {
  _call: AddAuctionWhiteListCall;

  constructor(call: AddAuctionWhiteListCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
