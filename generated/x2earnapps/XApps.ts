// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class AppAdded extends ethereum.Event {
  get params(): AppAdded__Params {
    return new AppAdded__Params(this);
  }
}

export class AppAdded__Params {
  _event: AppAdded;

  constructor(event: AppAdded) {
    this._event = event;
  }

  get id(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get addr(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get name(): string {
    return this._event.parameters[2].value.toString();
  }

  get appAvailableForAllocationVoting(): boolean {
    return this._event.parameters[3].value.toBoolean();
  }
}

export class AppAdminUpdated extends ethereum.Event {
  get params(): AppAdminUpdated__Params {
    return new AppAdminUpdated__Params(this);
  }
}

export class AppAdminUpdated__Params {
  _event: AppAdminUpdated;

  constructor(event: AppAdminUpdated) {
    this._event = event;
  }

  get appId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get oldAdmin(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get newAdmin(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class AppEndorsed extends ethereum.Event {
  get params(): AppEndorsed__Params {
    return new AppEndorsed__Params(this);
  }
}

export class AppEndorsed__Params {
  _event: AppEndorsed;

  constructor(event: AppEndorsed) {
    this._event = event;
  }

  get id(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get nodeId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get endorsed(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class AppEndorsementStatusUpdated extends ethereum.Event {
  get params(): AppEndorsementStatusUpdated__Params {
    return new AppEndorsementStatusUpdated__Params(this);
  }
}

export class AppEndorsementStatusUpdated__Params {
  _event: AppEndorsementStatusUpdated;

  constructor(event: AppEndorsementStatusUpdated) {
    this._event = event;
  }

  get appId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get endorsed(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class AppMetadataURIUpdated extends ethereum.Event {
  get params(): AppMetadataURIUpdated__Params {
    return new AppMetadataURIUpdated__Params(this);
  }
}

export class AppMetadataURIUpdated__Params {
  _event: AppMetadataURIUpdated;

  constructor(event: AppMetadataURIUpdated) {
    this._event = event;
  }

  get appId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get oldMetadataURI(): string {
    return this._event.parameters[1].value.toString();
  }

  get newMetadataURI(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class AppUnendorsedGracePeriodStarted extends ethereum.Event {
  get params(): AppUnendorsedGracePeriodStarted__Params {
    return new AppUnendorsedGracePeriodStarted__Params(this);
  }
}

export class AppUnendorsedGracePeriodStarted__Params {
  _event: AppUnendorsedGracePeriodStarted;

  constructor(event: AppUnendorsedGracePeriodStarted) {
    this._event = event;
  }

  get appId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get startBlock(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get endBlock(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class BaseURIUpdated extends ethereum.Event {
  get params(): BaseURIUpdated__Params {
    return new BaseURIUpdated__Params(this);
  }
}

export class BaseURIUpdated__Params {
  _event: BaseURIUpdated;

  constructor(event: BaseURIUpdated) {
    this._event = event;
  }

  get oldBaseURI(): string {
    return this._event.parameters[0].value.toString();
  }

  get newBaseURI(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class BlacklistUpdated extends ethereum.Event {
  get params(): BlacklistUpdated__Params {
    return new BlacklistUpdated__Params(this);
  }
}

export class BlacklistUpdated__Params {
  _event: BlacklistUpdated;

  constructor(event: BlacklistUpdated) {
    this._event = event;
  }

  get appId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get isBlacklisted(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class CreatorAddedToApp extends ethereum.Event {
  get params(): CreatorAddedToApp__Params {
    return new CreatorAddedToApp__Params(this);
  }
}

export class CreatorAddedToApp__Params {
  _event: CreatorAddedToApp;

  constructor(event: CreatorAddedToApp) {
    this._event = event;
  }

  get appId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get creatorAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class EndorsementScoreThresholdUpdated extends ethereum.Event {
  get params(): EndorsementScoreThresholdUpdated__Params {
    return new EndorsementScoreThresholdUpdated__Params(this);
  }
}

export class EndorsementScoreThresholdUpdated__Params {
  _event: EndorsementScoreThresholdUpdated;

  constructor(event: EndorsementScoreThresholdUpdated) {
    this._event = event;
  }

  get oldThreshold(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newThreshold(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class GracePeriodUpdated extends ethereum.Event {
  get params(): GracePeriodUpdated__Params {
    return new GracePeriodUpdated__Params(this);
  }
}

export class GracePeriodUpdated__Params {
  _event: GracePeriodUpdated;

  constructor(event: GracePeriodUpdated) {
    this._event = event;
  }

  get oldGracePeriod(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newGracePeriod(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ModeratorAddedToApp extends ethereum.Event {
  get params(): ModeratorAddedToApp__Params {
    return new ModeratorAddedToApp__Params(this);
  }
}

export class ModeratorAddedToApp__Params {
  _event: ModeratorAddedToApp;

  constructor(event: ModeratorAddedToApp) {
    this._event = event;
  }

  get appId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get moderator(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ModeratorRemovedFromApp extends ethereum.Event {
  get params(): ModeratorRemovedFromApp__Params {
    return new ModeratorRemovedFromApp__Params(this);
  }
}

export class ModeratorRemovedFromApp__Params {
  _event: ModeratorRemovedFromApp;

  constructor(event: ModeratorRemovedFromApp) {
    this._event = event;
  }

  get appId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get moderator(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class NodeStrengthScoresUpdated extends ethereum.Event {
  get params(): NodeStrengthScoresUpdated__Params {
    return new NodeStrengthScoresUpdated__Params(this);
  }
}

export class NodeStrengthScoresUpdated__Params {
  _event: NodeStrengthScoresUpdated;

  constructor(event: NodeStrengthScoresUpdated) {
    this._event = event;
  }

  get nodeStrengthScores(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class RewardDistributorAddedToApp extends ethereum.Event {
  get params(): RewardDistributorAddedToApp__Params {
    return new RewardDistributorAddedToApp__Params(this);
  }
}

export class RewardDistributorAddedToApp__Params {
  _event: RewardDistributorAddedToApp;

  constructor(event: RewardDistributorAddedToApp) {
    this._event = event;
  }

  get appId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get distributorAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class RewardDistributorRemovedFromApp extends ethereum.Event {
  get params(): RewardDistributorRemovedFromApp__Params {
    return new RewardDistributorRemovedFromApp__Params(this);
  }
}

export class RewardDistributorRemovedFromApp__Params {
  _event: RewardDistributorRemovedFromApp;

  constructor(event: RewardDistributorRemovedFromApp) {
    this._event = event;
  }

  get appId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get distributorAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class TeamAllocationPercentageUpdated extends ethereum.Event {
  get params(): TeamAllocationPercentageUpdated__Params {
    return new TeamAllocationPercentageUpdated__Params(this);
  }
}

export class TeamAllocationPercentageUpdated__Params {
  _event: TeamAllocationPercentageUpdated;

  constructor(event: TeamAllocationPercentageUpdated) {
    this._event = event;
  }

  get appId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get oldPercentage(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get newPercentage(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class TeamWalletAddressUpdated extends ethereum.Event {
  get params(): TeamWalletAddressUpdated__Params {
    return new TeamWalletAddressUpdated__Params(this);
  }
}

export class TeamWalletAddressUpdated__Params {
  _event: TeamWalletAddressUpdated;

  constructor(event: TeamWalletAddressUpdated) {
    this._event = event;
  }

  get appId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get oldTeamWalletAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get newTeamWalletAddress(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class Upgraded extends ethereum.Event {
  get params(): Upgraded__Params {
    return new Upgraded__Params(this);
  }
}

export class Upgraded__Params {
  _event: Upgraded;

  constructor(event: Upgraded) {
    this._event = event;
  }

  get implementation(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class VotingEligibilityUpdated extends ethereum.Event {
  get params(): VotingEligibilityUpdated__Params {
    return new VotingEligibilityUpdated__Params(this);
  }
}

export class VotingEligibilityUpdated__Params {
  _event: VotingEligibilityUpdated;

  constructor(event: VotingEligibilityUpdated) {
    this._event = event;
  }

  get appId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get isAvailable(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class XApps__appResultValue0Struct extends ethereum.Tuple {
  get id(): Bytes {
    return this[0].toBytes();
  }

  get teamWalletAddress(): Address {
    return this[1].toAddress();
  }

  get name(): string {
    return this[2].toString();
  }

  get metadataURI(): string {
    return this[3].toString();
  }

  get createdAtTimestamp(): BigInt {
    return this[4].toBigInt();
  }

  get appAvailableForAllocationVoting(): boolean {
    return this[5].toBoolean();
  }
}

export class XApps__appsResultValue0Struct extends ethereum.Tuple {
  get id(): Bytes {
    return this[0].toBytes();
  }

  get teamWalletAddress(): Address {
    return this[1].toAddress();
  }

  get name(): string {
    return this[2].toString();
  }

  get metadataURI(): string {
    return this[3].toString();
  }

  get createdAtTimestamp(): BigInt {
    return this[4].toBigInt();
  }

  get appAvailableForAllocationVoting(): boolean {
    return this[5].toBoolean();
  }
}

export class XApps__getPaginatedAppsResultValue0Struct extends ethereum.Tuple {
  get id(): Bytes {
    return this[0].toBytes();
  }

  get name(): string {
    return this[1].toString();
  }

  get createdAtTimestamp(): BigInt {
    return this[2].toBigInt();
  }
}

export class XApps__unendorsedAppsResultValue0Struct extends ethereum.Tuple {
  get id(): Bytes {
    return this[0].toBytes();
  }

  get teamWalletAddress(): Address {
    return this[1].toAddress();
  }

  get name(): string {
    return this[2].toString();
  }

  get metadataURI(): string {
    return this[3].toString();
  }

  get createdAtTimestamp(): BigInt {
    return this[4].toBigInt();
  }

  get appAvailableForAllocationVoting(): boolean {
    return this[5].toBoolean();
  }
}

export class XApps extends ethereum.SmartContract {
  static bind(address: Address): XApps {
    return new XApps("XApps", address);
  }

  CLOCK_MODE(): string {
    let result = super.call("CLOCK_MODE", "CLOCK_MODE():(string)", []);

    return result[0].toString();
  }

  try_CLOCK_MODE(): ethereum.CallResult<string> {
    let result = super.tryCall("CLOCK_MODE", "CLOCK_MODE():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      [],
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  GOVERNANCE_ROLE(): Bytes {
    let result = super.call(
      "GOVERNANCE_ROLE",
      "GOVERNANCE_ROLE():(bytes32)",
      [],
    );

    return result[0].toBytes();
  }

  try_GOVERNANCE_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "GOVERNANCE_ROLE",
      "GOVERNANCE_ROLE():(bytes32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  MAX_CREATORS(): BigInt {
    let result = super.call("MAX_CREATORS", "MAX_CREATORS():(uint256)", []);

    return result[0].toBigInt();
  }

  try_MAX_CREATORS(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("MAX_CREATORS", "MAX_CREATORS():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MAX_MODERATORS(): BigInt {
    let result = super.call("MAX_MODERATORS", "MAX_MODERATORS():(uint256)", []);

    return result[0].toBigInt();
  }

  try_MAX_MODERATORS(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MAX_MODERATORS",
      "MAX_MODERATORS():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MAX_REWARD_DISTRIBUTORS(): BigInt {
    let result = super.call(
      "MAX_REWARD_DISTRIBUTORS",
      "MAX_REWARD_DISTRIBUTORS():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_MAX_REWARD_DISTRIBUTORS(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MAX_REWARD_DISTRIBUTORS",
      "MAX_REWARD_DISTRIBUTORS():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  UPGRADER_ROLE(): Bytes {
    let result = super.call("UPGRADER_ROLE", "UPGRADER_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_UPGRADER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "UPGRADER_ROLE",
      "UPGRADER_ROLE():(bytes32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  UPGRADE_INTERFACE_VERSION(): string {
    let result = super.call(
      "UPGRADE_INTERFACE_VERSION",
      "UPGRADE_INTERFACE_VERSION():(string)",
      [],
    );

    return result[0].toString();
  }

  try_UPGRADE_INTERFACE_VERSION(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "UPGRADE_INTERFACE_VERSION",
      "UPGRADE_INTERFACE_VERSION():(string)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  allEligibleApps(): Array<Bytes> {
    let result = super.call(
      "allEligibleApps",
      "allEligibleApps():(bytes32[])",
      [],
    );

    return result[0].toBytesArray();
  }

  try_allEligibleApps(): ethereum.CallResult<Array<Bytes>> {
    let result = super.tryCall(
      "allEligibleApps",
      "allEligibleApps():(bytes32[])",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytesArray());
  }

  app(appId: Bytes): XApps__appResultValue0Struct {
    let result = super.call(
      "app",
      "app(bytes32):((bytes32,address,string,string,uint256,bool))",
      [ethereum.Value.fromFixedBytes(appId)],
    );

    return changetype<XApps__appResultValue0Struct>(result[0].toTuple());
  }

  try_app(appId: Bytes): ethereum.CallResult<XApps__appResultValue0Struct> {
    let result = super.tryCall(
      "app",
      "app(bytes32):((bytes32,address,string,string,uint256,bool))",
      [ethereum.Value.fromFixedBytes(appId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<XApps__appResultValue0Struct>(value[0].toTuple()),
    );
  }

  appAdmin(appId: Bytes): Address {
    let result = super.call("appAdmin", "appAdmin(bytes32):(address)", [
      ethereum.Value.fromFixedBytes(appId),
    ]);

    return result[0].toAddress();
  }

  try_appAdmin(appId: Bytes): ethereum.CallResult<Address> {
    let result = super.tryCall("appAdmin", "appAdmin(bytes32):(address)", [
      ethereum.Value.fromFixedBytes(appId),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  appCreators(appId: Bytes): Array<Address> {
    let result = super.call("appCreators", "appCreators(bytes32):(address[])", [
      ethereum.Value.fromFixedBytes(appId),
    ]);

    return result[0].toAddressArray();
  }

  try_appCreators(appId: Bytes): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "appCreators",
      "appCreators(bytes32):(address[])",
      [ethereum.Value.fromFixedBytes(appId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  appExists(appId: Bytes): boolean {
    let result = super.call("appExists", "appExists(bytes32):(bool)", [
      ethereum.Value.fromFixedBytes(appId),
    ]);

    return result[0].toBoolean();
  }

  try_appExists(appId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall("appExists", "appExists(bytes32):(bool)", [
      ethereum.Value.fromFixedBytes(appId),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  appModerators(appId: Bytes): Array<Address> {
    let result = super.call(
      "appModerators",
      "appModerators(bytes32):(address[])",
      [ethereum.Value.fromFixedBytes(appId)],
    );

    return result[0].toAddressArray();
  }

  try_appModerators(appId: Bytes): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "appModerators",
      "appModerators(bytes32):(address[])",
      [ethereum.Value.fromFixedBytes(appId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  appURI(appId: Bytes): string {
    let result = super.call("appURI", "appURI(bytes32):(string)", [
      ethereum.Value.fromFixedBytes(appId),
    ]);

    return result[0].toString();
  }

  try_appURI(appId: Bytes): ethereum.CallResult<string> {
    let result = super.tryCall("appURI", "appURI(bytes32):(string)", [
      ethereum.Value.fromFixedBytes(appId),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  apps(): Array<XApps__appsResultValue0Struct> {
    let result = super.call(
      "apps",
      "apps():((bytes32,address,string,string,uint256,bool)[])",
      [],
    );

    return result[0].toTupleArray<XApps__appsResultValue0Struct>();
  }

  try_apps(): ethereum.CallResult<Array<XApps__appsResultValue0Struct>> {
    let result = super.tryCall(
      "apps",
      "apps():((bytes32,address,string,string,uint256,bool)[])",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<XApps__appsResultValue0Struct>(),
    );
  }

  appsCount(): BigInt {
    let result = super.call("appsCount", "appsCount():(uint256)", []);

    return result[0].toBigInt();
  }

  try_appsCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("appsCount", "appsCount():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  baseURI(): string {
    let result = super.call("baseURI", "baseURI():(string)", []);

    return result[0].toString();
  }

  try_baseURI(): ethereum.CallResult<string> {
    let result = super.tryCall("baseURI", "baseURI():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  checkEndorsement(appId: Bytes): boolean {
    let result = super.call(
      "checkEndorsement",
      "checkEndorsement(bytes32):(bool)",
      [ethereum.Value.fromFixedBytes(appId)],
    );

    return result[0].toBoolean();
  }

  try_checkEndorsement(appId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "checkEndorsement",
      "checkEndorsement(bytes32):(bool)",
      [ethereum.Value.fromFixedBytes(appId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  clock(): BigInt {
    let result = super.call("clock", "clock():(uint48)", []);

    return result[0].toBigInt();
  }

  try_clock(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("clock", "clock():(uint48)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  creatorApps(creator: Address): BigInt {
    let result = super.call("creatorApps", "creatorApps(address):(uint256)", [
      ethereum.Value.fromAddress(creator),
    ]);

    return result[0].toBigInt();
  }

  try_creatorApps(creator: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "creatorApps",
      "creatorApps(address):(uint256)",
      [ethereum.Value.fromAddress(creator)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  endorsementScoreThreshold(): BigInt {
    let result = super.call(
      "endorsementScoreThreshold",
      "endorsementScoreThreshold():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_endorsementScoreThreshold(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "endorsementScoreThreshold",
      "endorsementScoreThreshold():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getEndorsers(appId: Bytes): Array<Address> {
    let result = super.call(
      "getEndorsers",
      "getEndorsers(bytes32):(address[])",
      [ethereum.Value.fromFixedBytes(appId)],
    );

    return result[0].toAddressArray();
  }

  try_getEndorsers(appId: Bytes): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getEndorsers",
      "getEndorsers(bytes32):(address[])",
      [ethereum.Value.fromFixedBytes(appId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getNodeEndorsementScore(nodeId: BigInt): BigInt {
    let result = super.call(
      "getNodeEndorsementScore",
      "getNodeEndorsementScore(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(nodeId)],
    );

    return result[0].toBigInt();
  }

  try_getNodeEndorsementScore(nodeId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getNodeEndorsementScore",
      "getNodeEndorsementScore(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(nodeId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getNodeManagementContract(): Address {
    let result = super.call(
      "getNodeManagementContract",
      "getNodeManagementContract():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_getNodeManagementContract(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getNodeManagementContract",
      "getNodeManagementContract():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getPaginatedApps(
    startIndex: BigInt,
    count: BigInt,
  ): Array<XApps__getPaginatedAppsResultValue0Struct> {
    let result = super.call(
      "getPaginatedApps",
      "getPaginatedApps(uint256,uint256):((bytes32,string,uint256)[])",
      [
        ethereum.Value.fromUnsignedBigInt(startIndex),
        ethereum.Value.fromUnsignedBigInt(count),
      ],
    );

    return result[0].toTupleArray<XApps__getPaginatedAppsResultValue0Struct>();
  }

  try_getPaginatedApps(
    startIndex: BigInt,
    count: BigInt,
  ): ethereum.CallResult<Array<XApps__getPaginatedAppsResultValue0Struct>> {
    let result = super.tryCall(
      "getPaginatedApps",
      "getPaginatedApps(uint256,uint256):((bytes32,string,uint256)[])",
      [
        ethereum.Value.fromUnsignedBigInt(startIndex),
        ethereum.Value.fromUnsignedBigInt(count),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<XApps__getPaginatedAppsResultValue0Struct>(),
    );
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role),
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getScore(appId: Bytes): BigInt {
    let result = super.call("getScore", "getScore(bytes32):(uint256)", [
      ethereum.Value.fromFixedBytes(appId),
    ]);

    return result[0].toBigInt();
  }

  try_getScore(appId: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getScore", "getScore(bytes32):(uint256)", [
      ethereum.Value.fromFixedBytes(appId),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getUsersEndorsementScore(user: Address): BigInt {
    let result = super.call(
      "getUsersEndorsementScore",
      "getUsersEndorsementScore(address):(uint256)",
      [ethereum.Value.fromAddress(user)],
    );

    return result[0].toBigInt();
  }

  try_getUsersEndorsementScore(user: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getUsersEndorsementScore",
      "getUsersEndorsementScore(address):(uint256)",
      [ethereum.Value.fromAddress(user)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getVeBetterPassportContract(): Address {
    let result = super.call(
      "getVeBetterPassportContract",
      "getVeBetterPassportContract():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_getVeBetterPassportContract(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getVeBetterPassportContract",
      "getVeBetterPassportContract():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  gracePeriod(): BigInt {
    let result = super.call("gracePeriod", "gracePeriod():(uint256)", []);

    return result[0].toBigInt();
  }

  try_gracePeriod(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("gracePeriod", "gracePeriod():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account),
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  hashAppName(appName: string): Bytes {
    let result = super.call("hashAppName", "hashAppName(string):(bytes32)", [
      ethereum.Value.fromString(appName),
    ]);

    return result[0].toBytes();
  }

  try_hashAppName(appName: string): ethereum.CallResult<Bytes> {
    let result = super.tryCall("hashAppName", "hashAppName(string):(bytes32)", [
      ethereum.Value.fromString(appName),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  isAppAdmin(appId: Bytes, account: Address): boolean {
    let result = super.call(
      "isAppAdmin",
      "isAppAdmin(bytes32,address):(bool)",
      [
        ethereum.Value.fromFixedBytes(appId),
        ethereum.Value.fromAddress(account),
      ],
    );

    return result[0].toBoolean();
  }

  try_isAppAdmin(appId: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isAppAdmin",
      "isAppAdmin(bytes32,address):(bool)",
      [
        ethereum.Value.fromFixedBytes(appId),
        ethereum.Value.fromAddress(account),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isAppCreator(appId: Bytes, account: Address): boolean {
    let result = super.call(
      "isAppCreator",
      "isAppCreator(bytes32,address):(bool)",
      [
        ethereum.Value.fromFixedBytes(appId),
        ethereum.Value.fromAddress(account),
      ],
    );

    return result[0].toBoolean();
  }

  try_isAppCreator(
    appId: Bytes,
    account: Address,
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isAppCreator",
      "isAppCreator(bytes32,address):(bool)",
      [
        ethereum.Value.fromFixedBytes(appId),
        ethereum.Value.fromAddress(account),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isAppModerator(appId: Bytes, account: Address): boolean {
    let result = super.call(
      "isAppModerator",
      "isAppModerator(bytes32,address):(bool)",
      [
        ethereum.Value.fromFixedBytes(appId),
        ethereum.Value.fromAddress(account),
      ],
    );

    return result[0].toBoolean();
  }

  try_isAppModerator(
    appId: Bytes,
    account: Address,
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isAppModerator",
      "isAppModerator(bytes32,address):(bool)",
      [
        ethereum.Value.fromFixedBytes(appId),
        ethereum.Value.fromAddress(account),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isAppUnendorsed(appId: Bytes): boolean {
    let result = super.call(
      "isAppUnendorsed",
      "isAppUnendorsed(bytes32):(bool)",
      [ethereum.Value.fromFixedBytes(appId)],
    );

    return result[0].toBoolean();
  }

  try_isAppUnendorsed(appId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isAppUnendorsed",
      "isAppUnendorsed(bytes32):(bool)",
      [ethereum.Value.fromFixedBytes(appId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isBlacklisted(appId: Bytes): boolean {
    let result = super.call("isBlacklisted", "isBlacklisted(bytes32):(bool)", [
      ethereum.Value.fromFixedBytes(appId),
    ]);

    return result[0].toBoolean();
  }

  try_isBlacklisted(appId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isBlacklisted",
      "isBlacklisted(bytes32):(bool)",
      [ethereum.Value.fromFixedBytes(appId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isEligible(appId: Bytes, timepoint: BigInt): boolean {
    let result = super.call(
      "isEligible",
      "isEligible(bytes32,uint256):(bool)",
      [
        ethereum.Value.fromFixedBytes(appId),
        ethereum.Value.fromUnsignedBigInt(timepoint),
      ],
    );

    return result[0].toBoolean();
  }

  try_isEligible(
    appId: Bytes,
    timepoint: BigInt,
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isEligible",
      "isEligible(bytes32,uint256):(bool)",
      [
        ethereum.Value.fromFixedBytes(appId),
        ethereum.Value.fromUnsignedBigInt(timepoint),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isEligibleNow(appId: Bytes): boolean {
    let result = super.call("isEligibleNow", "isEligibleNow(bytes32):(bool)", [
      ethereum.Value.fromFixedBytes(appId),
    ]);

    return result[0].toBoolean();
  }

  try_isEligibleNow(appId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isEligibleNow",
      "isEligibleNow(bytes32):(bool)",
      [ethereum.Value.fromFixedBytes(appId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isRewardDistributor(appId: Bytes, account: Address): boolean {
    let result = super.call(
      "isRewardDistributor",
      "isRewardDistributor(bytes32,address):(bool)",
      [
        ethereum.Value.fromFixedBytes(appId),
        ethereum.Value.fromAddress(account),
      ],
    );

    return result[0].toBoolean();
  }

  try_isRewardDistributor(
    appId: Bytes,
    account: Address,
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isRewardDistributor",
      "isRewardDistributor(bytes32,address):(bool)",
      [
        ethereum.Value.fromFixedBytes(appId),
        ethereum.Value.fromAddress(account),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  metadataURI(appId: Bytes): string {
    let result = super.call("metadataURI", "metadataURI(bytes32):(string)", [
      ethereum.Value.fromFixedBytes(appId),
    ]);

    return result[0].toString();
  }

  try_metadataURI(appId: Bytes): ethereum.CallResult<string> {
    let result = super.tryCall("metadataURI", "metadataURI(bytes32):(string)", [
      ethereum.Value.fromFixedBytes(appId),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  nodeLevelEndorsementScore(nodeLevel: i32): BigInt {
    let result = super.call(
      "nodeLevelEndorsementScore",
      "nodeLevelEndorsementScore(uint8):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(nodeLevel))],
    );

    return result[0].toBigInt();
  }

  try_nodeLevelEndorsementScore(nodeLevel: i32): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "nodeLevelEndorsementScore",
      "nodeLevelEndorsementScore(uint8):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(nodeLevel))],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  nodeToEndorsedApp(nodeId: BigInt): Bytes {
    let result = super.call(
      "nodeToEndorsedApp",
      "nodeToEndorsedApp(uint256):(bytes32)",
      [ethereum.Value.fromUnsignedBigInt(nodeId)],
    );

    return result[0].toBytes();
  }

  try_nodeToEndorsedApp(nodeId: BigInt): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "nodeToEndorsedApp",
      "nodeToEndorsedApp(uint256):(bytes32)",
      [ethereum.Value.fromUnsignedBigInt(nodeId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  proxiableUUID(): Bytes {
    let result = super.call("proxiableUUID", "proxiableUUID():(bytes32)", []);

    return result[0].toBytes();
  }

  try_proxiableUUID(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "proxiableUUID",
      "proxiableUUID():(bytes32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  rewardDistributors(appId: Bytes): Array<Address> {
    let result = super.call(
      "rewardDistributors",
      "rewardDistributors(bytes32):(address[])",
      [ethereum.Value.fromFixedBytes(appId)],
    );

    return result[0].toAddressArray();
  }

  try_rewardDistributors(appId: Bytes): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "rewardDistributors",
      "rewardDistributors(bytes32):(address[])",
      [ethereum.Value.fromFixedBytes(appId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)],
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  teamAllocationPercentage(appId: Bytes): BigInt {
    let result = super.call(
      "teamAllocationPercentage",
      "teamAllocationPercentage(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(appId)],
    );

    return result[0].toBigInt();
  }

  try_teamAllocationPercentage(appId: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "teamAllocationPercentage",
      "teamAllocationPercentage(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(appId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  teamWalletAddress(appId: Bytes): Address {
    let result = super.call(
      "teamWalletAddress",
      "teamWalletAddress(bytes32):(address)",
      [ethereum.Value.fromFixedBytes(appId)],
    );

    return result[0].toAddress();
  }

  try_teamWalletAddress(appId: Bytes): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "teamWalletAddress",
      "teamWalletAddress(bytes32):(address)",
      [ethereum.Value.fromFixedBytes(appId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  unendorsedAppIds(): Array<Bytes> {
    let result = super.call(
      "unendorsedAppIds",
      "unendorsedAppIds():(bytes32[])",
      [],
    );

    return result[0].toBytesArray();
  }

  try_unendorsedAppIds(): ethereum.CallResult<Array<Bytes>> {
    let result = super.tryCall(
      "unendorsedAppIds",
      "unendorsedAppIds():(bytes32[])",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytesArray());
  }

  unendorsedApps(): Array<XApps__unendorsedAppsResultValue0Struct> {
    let result = super.call(
      "unendorsedApps",
      "unendorsedApps():((bytes32,address,string,string,uint256,bool)[])",
      [],
    );

    return result[0].toTupleArray<XApps__unendorsedAppsResultValue0Struct>();
  }

  try_unendorsedApps(): ethereum.CallResult<
    Array<XApps__unendorsedAppsResultValue0Struct>
  > {
    let result = super.tryCall(
      "unendorsedApps",
      "unendorsedApps():((bytes32,address,string,string,uint256,bool)[])",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<XApps__unendorsedAppsResultValue0Struct>(),
    );
  }

  version(): string {
    let result = super.call("version", "version():(string)", []);

    return result[0].toString();
  }

  try_version(): ethereum.CallResult<string> {
    let result = super.tryCall("version", "version():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  x2EarnCreatorContract(): Address {
    let result = super.call(
      "x2EarnCreatorContract",
      "x2EarnCreatorContract():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_x2EarnCreatorContract(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "x2EarnCreatorContract",
      "x2EarnCreatorContract():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddAppModeratorCall extends ethereum.Call {
  get inputs(): AddAppModeratorCall__Inputs {
    return new AddAppModeratorCall__Inputs(this);
  }

  get outputs(): AddAppModeratorCall__Outputs {
    return new AddAppModeratorCall__Outputs(this);
  }
}

export class AddAppModeratorCall__Inputs {
  _call: AddAppModeratorCall;

  constructor(call: AddAppModeratorCall) {
    this._call = call;
  }

  get _appId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _moderator(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class AddAppModeratorCall__Outputs {
  _call: AddAppModeratorCall;

  constructor(call: AddAppModeratorCall) {
    this._call = call;
  }
}

export class AddCreatorCall extends ethereum.Call {
  get inputs(): AddCreatorCall__Inputs {
    return new AddCreatorCall__Inputs(this);
  }

  get outputs(): AddCreatorCall__Outputs {
    return new AddCreatorCall__Outputs(this);
  }
}

export class AddCreatorCall__Inputs {
  _call: AddCreatorCall;

  constructor(call: AddCreatorCall) {
    this._call = call;
  }

  get _appId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _creator(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class AddCreatorCall__Outputs {
  _call: AddCreatorCall;

  constructor(call: AddCreatorCall) {
    this._call = call;
  }
}

export class AddRewardDistributorCall extends ethereum.Call {
  get inputs(): AddRewardDistributorCall__Inputs {
    return new AddRewardDistributorCall__Inputs(this);
  }

  get outputs(): AddRewardDistributorCall__Outputs {
    return new AddRewardDistributorCall__Outputs(this);
  }
}

export class AddRewardDistributorCall__Inputs {
  _call: AddRewardDistributorCall;

  constructor(call: AddRewardDistributorCall) {
    this._call = call;
  }

  get _appId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _distributor(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class AddRewardDistributorCall__Outputs {
  _call: AddRewardDistributorCall;

  constructor(call: AddRewardDistributorCall) {
    this._call = call;
  }
}

export class CheckEndorsementCall extends ethereum.Call {
  get inputs(): CheckEndorsementCall__Inputs {
    return new CheckEndorsementCall__Inputs(this);
  }

  get outputs(): CheckEndorsementCall__Outputs {
    return new CheckEndorsementCall__Outputs(this);
  }
}

export class CheckEndorsementCall__Inputs {
  _call: CheckEndorsementCall;

  constructor(call: CheckEndorsementCall) {
    this._call = call;
  }

  get appId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class CheckEndorsementCall__Outputs {
  _call: CheckEndorsementCall;

  constructor(call: CheckEndorsementCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class EndorseAppCall extends ethereum.Call {
  get inputs(): EndorseAppCall__Inputs {
    return new EndorseAppCall__Inputs(this);
  }

  get outputs(): EndorseAppCall__Outputs {
    return new EndorseAppCall__Outputs(this);
  }
}

export class EndorseAppCall__Inputs {
  _call: EndorseAppCall;

  constructor(call: EndorseAppCall) {
    this._call = call;
  }

  get appId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get nodeId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class EndorseAppCall__Outputs {
  _call: EndorseAppCall;

  constructor(call: EndorseAppCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class InitializeV2Call extends ethereum.Call {
  get inputs(): InitializeV2Call__Inputs {
    return new InitializeV2Call__Inputs(this);
  }

  get outputs(): InitializeV2Call__Outputs {
    return new InitializeV2Call__Outputs(this);
  }
}

export class InitializeV2Call__Inputs {
  _call: InitializeV2Call;

  constructor(call: InitializeV2Call) {
    this._call = call;
  }

  get _gracePeriod(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _nodeManagementContract(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _veBetterPassportContract(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _x2EarnCreatorContract(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class InitializeV2Call__Outputs {
  _call: InitializeV2Call;

  constructor(call: InitializeV2Call) {
    this._call = call;
  }
}

export class RemoveAppCreatorCall extends ethereum.Call {
  get inputs(): RemoveAppCreatorCall__Inputs {
    return new RemoveAppCreatorCall__Inputs(this);
  }

  get outputs(): RemoveAppCreatorCall__Outputs {
    return new RemoveAppCreatorCall__Outputs(this);
  }
}

export class RemoveAppCreatorCall__Inputs {
  _call: RemoveAppCreatorCall;

  constructor(call: RemoveAppCreatorCall) {
    this._call = call;
  }

  get _appId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _creator(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RemoveAppCreatorCall__Outputs {
  _call: RemoveAppCreatorCall;

  constructor(call: RemoveAppCreatorCall) {
    this._call = call;
  }
}

export class RemoveAppModeratorCall extends ethereum.Call {
  get inputs(): RemoveAppModeratorCall__Inputs {
    return new RemoveAppModeratorCall__Inputs(this);
  }

  get outputs(): RemoveAppModeratorCall__Outputs {
    return new RemoveAppModeratorCall__Outputs(this);
  }
}

export class RemoveAppModeratorCall__Inputs {
  _call: RemoveAppModeratorCall;

  constructor(call: RemoveAppModeratorCall) {
    this._call = call;
  }

  get _appId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _moderator(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RemoveAppModeratorCall__Outputs {
  _call: RemoveAppModeratorCall;

  constructor(call: RemoveAppModeratorCall) {
    this._call = call;
  }
}

export class RemoveNodeEndorsementCall extends ethereum.Call {
  get inputs(): RemoveNodeEndorsementCall__Inputs {
    return new RemoveNodeEndorsementCall__Inputs(this);
  }

  get outputs(): RemoveNodeEndorsementCall__Outputs {
    return new RemoveNodeEndorsementCall__Outputs(this);
  }
}

export class RemoveNodeEndorsementCall__Inputs {
  _call: RemoveNodeEndorsementCall;

  constructor(call: RemoveNodeEndorsementCall) {
    this._call = call;
  }

  get _appId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _nodeId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class RemoveNodeEndorsementCall__Outputs {
  _call: RemoveNodeEndorsementCall;

  constructor(call: RemoveNodeEndorsementCall) {
    this._call = call;
  }
}

export class RemoveRewardDistributorCall extends ethereum.Call {
  get inputs(): RemoveRewardDistributorCall__Inputs {
    return new RemoveRewardDistributorCall__Inputs(this);
  }

  get outputs(): RemoveRewardDistributorCall__Outputs {
    return new RemoveRewardDistributorCall__Outputs(this);
  }
}

export class RemoveRewardDistributorCall__Inputs {
  _call: RemoveRewardDistributorCall;

  constructor(call: RemoveRewardDistributorCall) {
    this._call = call;
  }

  get _appId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _distributor(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RemoveRewardDistributorCall__Outputs {
  _call: RemoveRewardDistributorCall;

  constructor(call: RemoveRewardDistributorCall) {
    this._call = call;
  }
}

export class RemoveXAppSubmissionCall extends ethereum.Call {
  get inputs(): RemoveXAppSubmissionCall__Inputs {
    return new RemoveXAppSubmissionCall__Inputs(this);
  }

  get outputs(): RemoveXAppSubmissionCall__Outputs {
    return new RemoveXAppSubmissionCall__Outputs(this);
  }
}

export class RemoveXAppSubmissionCall__Inputs {
  _call: RemoveXAppSubmissionCall;

  constructor(call: RemoveXAppSubmissionCall) {
    this._call = call;
  }

  get _appId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class RemoveXAppSubmissionCall__Outputs {
  _call: RemoveXAppSubmissionCall;

  constructor(call: RemoveXAppSubmissionCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get callerConfirmation(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class SetAppAdminCall extends ethereum.Call {
  get inputs(): SetAppAdminCall__Inputs {
    return new SetAppAdminCall__Inputs(this);
  }

  get outputs(): SetAppAdminCall__Outputs {
    return new SetAppAdminCall__Outputs(this);
  }
}

export class SetAppAdminCall__Inputs {
  _call: SetAppAdminCall;

  constructor(call: SetAppAdminCall) {
    this._call = call;
  }

  get _appId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _newAdmin(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SetAppAdminCall__Outputs {
  _call: SetAppAdminCall;

  constructor(call: SetAppAdminCall) {
    this._call = call;
  }
}

export class SetBaseURICall extends ethereum.Call {
  get inputs(): SetBaseURICall__Inputs {
    return new SetBaseURICall__Inputs(this);
  }

  get outputs(): SetBaseURICall__Outputs {
    return new SetBaseURICall__Outputs(this);
  }
}

export class SetBaseURICall__Inputs {
  _call: SetBaseURICall;

  constructor(call: SetBaseURICall) {
    this._call = call;
  }

  get _baseURI(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class SetBaseURICall__Outputs {
  _call: SetBaseURICall;

  constructor(call: SetBaseURICall) {
    this._call = call;
  }
}

export class SetNodeManagementContractCall extends ethereum.Call {
  get inputs(): SetNodeManagementContractCall__Inputs {
    return new SetNodeManagementContractCall__Inputs(this);
  }

  get outputs(): SetNodeManagementContractCall__Outputs {
    return new SetNodeManagementContractCall__Outputs(this);
  }
}

export class SetNodeManagementContractCall__Inputs {
  _call: SetNodeManagementContractCall;

  constructor(call: SetNodeManagementContractCall) {
    this._call = call;
  }

  get _nodeManagementContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetNodeManagementContractCall__Outputs {
  _call: SetNodeManagementContractCall;

  constructor(call: SetNodeManagementContractCall) {
    this._call = call;
  }
}

export class SetTeamAllocationPercentageCall extends ethereum.Call {
  get inputs(): SetTeamAllocationPercentageCall__Inputs {
    return new SetTeamAllocationPercentageCall__Inputs(this);
  }

  get outputs(): SetTeamAllocationPercentageCall__Outputs {
    return new SetTeamAllocationPercentageCall__Outputs(this);
  }
}

export class SetTeamAllocationPercentageCall__Inputs {
  _call: SetTeamAllocationPercentageCall;

  constructor(call: SetTeamAllocationPercentageCall) {
    this._call = call;
  }

  get _appId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _percentage(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetTeamAllocationPercentageCall__Outputs {
  _call: SetTeamAllocationPercentageCall;

  constructor(call: SetTeamAllocationPercentageCall) {
    this._call = call;
  }
}

export class SetVeBetterPassportContractCall extends ethereum.Call {
  get inputs(): SetVeBetterPassportContractCall__Inputs {
    return new SetVeBetterPassportContractCall__Inputs(this);
  }

  get outputs(): SetVeBetterPassportContractCall__Outputs {
    return new SetVeBetterPassportContractCall__Outputs(this);
  }
}

export class SetVeBetterPassportContractCall__Inputs {
  _call: SetVeBetterPassportContractCall;

  constructor(call: SetVeBetterPassportContractCall) {
    this._call = call;
  }

  get _veBetterPassportContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetVeBetterPassportContractCall__Outputs {
  _call: SetVeBetterPassportContractCall;

  constructor(call: SetVeBetterPassportContractCall) {
    this._call = call;
  }
}

export class SetVotingEligibilityCall extends ethereum.Call {
  get inputs(): SetVotingEligibilityCall__Inputs {
    return new SetVotingEligibilityCall__Inputs(this);
  }

  get outputs(): SetVotingEligibilityCall__Outputs {
    return new SetVotingEligibilityCall__Outputs(this);
  }
}

export class SetVotingEligibilityCall__Inputs {
  _call: SetVotingEligibilityCall;

  constructor(call: SetVotingEligibilityCall) {
    this._call = call;
  }

  get _appId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _isEligible(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetVotingEligibilityCall__Outputs {
  _call: SetVotingEligibilityCall;

  constructor(call: SetVotingEligibilityCall) {
    this._call = call;
  }
}

export class SetX2EarnCreatorContractCall extends ethereum.Call {
  get inputs(): SetX2EarnCreatorContractCall__Inputs {
    return new SetX2EarnCreatorContractCall__Inputs(this);
  }

  get outputs(): SetX2EarnCreatorContractCall__Outputs {
    return new SetX2EarnCreatorContractCall__Outputs(this);
  }
}

export class SetX2EarnCreatorContractCall__Inputs {
  _call: SetX2EarnCreatorContractCall;

  constructor(call: SetX2EarnCreatorContractCall) {
    this._call = call;
  }

  get _x2EarnCreatorContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetX2EarnCreatorContractCall__Outputs {
  _call: SetX2EarnCreatorContractCall;

  constructor(call: SetX2EarnCreatorContractCall) {
    this._call = call;
  }
}

export class SubmitAppCall extends ethereum.Call {
  get inputs(): SubmitAppCall__Inputs {
    return new SubmitAppCall__Inputs(this);
  }

  get outputs(): SubmitAppCall__Outputs {
    return new SubmitAppCall__Outputs(this);
  }
}

export class SubmitAppCall__Inputs {
  _call: SubmitAppCall;

  constructor(call: SubmitAppCall) {
    this._call = call;
  }

  get _teamWalletAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _admin(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _appName(): string {
    return this._call.inputValues[2].value.toString();
  }

  get _appMetadataURI(): string {
    return this._call.inputValues[3].value.toString();
  }
}

export class SubmitAppCall__Outputs {
  _call: SubmitAppCall;

  constructor(call: SubmitAppCall) {
    this._call = call;
  }
}

export class UnendorseAppCall extends ethereum.Call {
  get inputs(): UnendorseAppCall__Inputs {
    return new UnendorseAppCall__Inputs(this);
  }

  get outputs(): UnendorseAppCall__Outputs {
    return new UnendorseAppCall__Outputs(this);
  }
}

export class UnendorseAppCall__Inputs {
  _call: UnendorseAppCall;

  constructor(call: UnendorseAppCall) {
    this._call = call;
  }

  get appId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get nodeId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class UnendorseAppCall__Outputs {
  _call: UnendorseAppCall;

  constructor(call: UnendorseAppCall) {
    this._call = call;
  }
}

export class UpdateAppMetadataCall extends ethereum.Call {
  get inputs(): UpdateAppMetadataCall__Inputs {
    return new UpdateAppMetadataCall__Inputs(this);
  }

  get outputs(): UpdateAppMetadataCall__Outputs {
    return new UpdateAppMetadataCall__Outputs(this);
  }
}

export class UpdateAppMetadataCall__Inputs {
  _call: UpdateAppMetadataCall;

  constructor(call: UpdateAppMetadataCall) {
    this._call = call;
  }

  get _appId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _newMetadataURI(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class UpdateAppMetadataCall__Outputs {
  _call: UpdateAppMetadataCall;

  constructor(call: UpdateAppMetadataCall) {
    this._call = call;
  }
}

export class UpdateEndorsementScoreThresholdCall extends ethereum.Call {
  get inputs(): UpdateEndorsementScoreThresholdCall__Inputs {
    return new UpdateEndorsementScoreThresholdCall__Inputs(this);
  }

  get outputs(): UpdateEndorsementScoreThresholdCall__Outputs {
    return new UpdateEndorsementScoreThresholdCall__Outputs(this);
  }
}

export class UpdateEndorsementScoreThresholdCall__Inputs {
  _call: UpdateEndorsementScoreThresholdCall;

  constructor(call: UpdateEndorsementScoreThresholdCall) {
    this._call = call;
  }

  get _scoreThreshold(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateEndorsementScoreThresholdCall__Outputs {
  _call: UpdateEndorsementScoreThresholdCall;

  constructor(call: UpdateEndorsementScoreThresholdCall) {
    this._call = call;
  }
}

export class UpdateGracePeriodCall extends ethereum.Call {
  get inputs(): UpdateGracePeriodCall__Inputs {
    return new UpdateGracePeriodCall__Inputs(this);
  }

  get outputs(): UpdateGracePeriodCall__Outputs {
    return new UpdateGracePeriodCall__Outputs(this);
  }
}

export class UpdateGracePeriodCall__Inputs {
  _call: UpdateGracePeriodCall;

  constructor(call: UpdateGracePeriodCall) {
    this._call = call;
  }

  get _newGracePeriod(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateGracePeriodCall__Outputs {
  _call: UpdateGracePeriodCall;

  constructor(call: UpdateGracePeriodCall) {
    this._call = call;
  }
}

export class UpdateNodeEndorsementScoresCall extends ethereum.Call {
  get inputs(): UpdateNodeEndorsementScoresCall__Inputs {
    return new UpdateNodeEndorsementScoresCall__Inputs(this);
  }

  get outputs(): UpdateNodeEndorsementScoresCall__Outputs {
    return new UpdateNodeEndorsementScoresCall__Outputs(this);
  }
}

export class UpdateNodeEndorsementScoresCall__Inputs {
  _call: UpdateNodeEndorsementScoresCall;

  constructor(call: UpdateNodeEndorsementScoresCall) {
    this._call = call;
  }

  get _nodeStrengthScores(): UpdateNodeEndorsementScoresCall_nodeStrengthScoresStruct {
    return changetype<UpdateNodeEndorsementScoresCall_nodeStrengthScoresStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }
}

export class UpdateNodeEndorsementScoresCall__Outputs {
  _call: UpdateNodeEndorsementScoresCall;

  constructor(call: UpdateNodeEndorsementScoresCall) {
    this._call = call;
  }
}

export class UpdateNodeEndorsementScoresCall_nodeStrengthScoresStruct extends ethereum.Tuple {
  get strength(): BigInt {
    return this[0].toBigInt();
  }

  get thunder(): BigInt {
    return this[1].toBigInt();
  }

  get mjolnir(): BigInt {
    return this[2].toBigInt();
  }

  get veThorX(): BigInt {
    return this[3].toBigInt();
  }

  get strengthX(): BigInt {
    return this[4].toBigInt();
  }

  get thunderX(): BigInt {
    return this[5].toBigInt();
  }

  get mjolnirX(): BigInt {
    return this[6].toBigInt();
  }
}

export class UpdateTeamWalletAddressCall extends ethereum.Call {
  get inputs(): UpdateTeamWalletAddressCall__Inputs {
    return new UpdateTeamWalletAddressCall__Inputs(this);
  }

  get outputs(): UpdateTeamWalletAddressCall__Outputs {
    return new UpdateTeamWalletAddressCall__Outputs(this);
  }
}

export class UpdateTeamWalletAddressCall__Inputs {
  _call: UpdateTeamWalletAddressCall;

  constructor(call: UpdateTeamWalletAddressCall) {
    this._call = call;
  }

  get _appId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _newReceiverAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class UpdateTeamWalletAddressCall__Outputs {
  _call: UpdateTeamWalletAddressCall;

  constructor(call: UpdateTeamWalletAddressCall) {
    this._call = call;
  }
}

export class UpgradeToAndCallCall extends ethereum.Call {
  get inputs(): UpgradeToAndCallCall__Inputs {
    return new UpgradeToAndCallCall__Inputs(this);
  }

  get outputs(): UpgradeToAndCallCall__Outputs {
    return new UpgradeToAndCallCall__Outputs(this);
  }
}

export class UpgradeToAndCallCall__Inputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get data(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class UpgradeToAndCallCall__Outputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }
}
